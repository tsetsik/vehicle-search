// Code generated by MockGen. DO NOT EDIT.
// Source: ./store.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStore is a mock of Store interface.
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore.
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance.
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// AddItem mocks base method.
func (m *MockStore) AddItem(item any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddItem", item)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddItem indicates an expected call of AddItem.
func (mr *MockStoreMockRecorder) AddItem(item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddItem", reflect.TypeOf((*MockStore)(nil).AddItem), item)
}

// GetAllItems mocks base method.
func (m *MockStore) GetAllItems() []any {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllItems")
	ret0, _ := ret[0].([]any)
	return ret0
}

// GetAllItems indicates an expected call of GetAllItems.
func (mr *MockStoreMockRecorder) GetAllItems() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllItems", reflect.TypeOf((*MockStore)(nil).GetAllItems))
}

// GetItem mocks base method.
func (m *MockStore) GetItem(hash string) any {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItem", hash)
	ret0, _ := ret[0].(any)
	return ret0
}

// GetItem indicates an expected call of GetItem.
func (mr *MockStoreMockRecorder) GetItem(hash interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItem", reflect.TypeOf((*MockStore)(nil).GetItem), hash)
}
